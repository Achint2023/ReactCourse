{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\achisriv\\\\OneDrive - Capgemini\\\\Documents\\\\React Course\\\\ExpenseApp\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ExpenseFilter from '../UI/ExpensesFilter';\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport ExpensesChart from './ExpensesChart';\nimport ExpensesList from './ExpenseList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [year, setYear] = React.useState('2022');\n  function getYearHandler(gotYear) {\n    setYear(gotYear);\n  }\n  const new_exp = props.items.filter(exp => {\n    return exp.date.getFullYear().toString() === year;\n  });\n\n  // let output = <h2>No expenses found</h2>;\n\n  // if ( new_exp.length > 0 ){\n  //   output = new_exp.map((exp) => {return <ExpenseItem key={exp.id} title={exp.title} amount={exp.amount}\n  //     date={exp.date} \n  //     getYear={getYearHandler}/>\n  //     })\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n        onChangeFilter: getYearHandler,\n        selected: year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ExpensesChart, {\n        expense: new_exp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), console.log('in Expenses, Set year is ' + year), /*#__PURE__*/_jsxDEV(ExpensesList, {\n        items: new_exp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Expenses, \"xr+DfWqUIawAWb1bKrFWBYf+ju0=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","ExpenseFilter","Card","ExpensesChart","ExpensesList","jsxDEV","_jsxDEV","Expenses","props","_s","year","setYear","useState","getYearHandler","gotYear","new_exp","items","filter","exp","date","getFullYear","toString","children","className","onChangeFilter","selected","fileName","_jsxFileName","lineNumber","columnNumber","expense","console","log","_c","$RefreshReg$"],"sources":["C:/Users/achisriv/OneDrive - Capgemini/Documents/React Course/ExpenseApp/src/components/Expenses/Expenses.js"],"sourcesContent":["import React from 'react';\nimport ExpenseFilter from '../UI/ExpensesFilter';\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport ExpensesChart from './ExpensesChart';\nimport ExpensesList from './ExpenseList';\n\nconst Expenses = (props) => {\n\n  const [year, setYear] = React.useState('2022');\n\n  function getYearHandler(gotYear) {\n    setYear(gotYear);\n  }\n\n    const new_exp = props.items.filter((exp) => { return exp.date.getFullYear().toString() === year});\n\n    // let output = <h2>No expenses found</h2>;\n\n    // if ( new_exp.length > 0 ){\n    //   output = new_exp.map((exp) => {return <ExpenseItem key={exp.id} title={exp.title} amount={exp.amount}\n    //     date={exp.date} \n    //     getYear={getYearHandler}/>\n    //     })\n    // }\n\n  return (\n    <div>\n    <Card className=\"expenses\">\n      \n      <ExpenseFilter onChangeFilter={getYearHandler} selected={year}/>\n\n      <ExpensesChart expense={new_exp}/>\n\n      {/* {console.log(props.it)} */}\n\n      {console.log('in Expenses, Set year is ' +year)}\n\n      {/* {output} */}\n      <ExpensesList items={new_exp} />\n\n      \n\n      {/* {new_exp.length == 0 && <h2>No expenses found</h2> } */}\n      {/* // {new_exp.length == 0 ? <h2>No expenses found</h2> :  */}\n      {/* {new_exp.length > 0 && new_exp.map((exp) => {return <ExpenseItem key={exp.id} title={exp.title}\n        amount={exp.amount}\n        date={exp.date} \n        getYear={getYearHandler}/>\n        })} */}\n\n\n      {/* <ExpenseItem\n        title={props.items[0].title}\n        amount={props.items[0].amount}\n        date={props.items[0].date}\n      />\n      <ExpenseItem\n        title={props.items[1].title}\n        amount={props.items[1].amount}\n        date={props.items[1].date}\n      />\n      <ExpenseItem\n        title={props.items[2].title}\n        amount={props.items[2].amount}\n        date={props.items[2].date}\n      />\n      <ExpenseItem\n        title={props.items[3].title}\n        amount={props.items[3].amount}\n        date={props.items[3].date}\n      /> */}\n    </Card>\n    </div>\n  );\n}\n\nexport default Expenses;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,gBAAgB;AACvB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,YAAY,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,MAAM,CAAC;EAE9C,SAASC,cAAcA,CAACC,OAAO,EAAE;IAC/BH,OAAO,CAACG,OAAO,CAAC;EAClB;EAEE,MAAMC,OAAO,GAAGP,KAAK,CAACQ,KAAK,CAACC,MAAM,CAAEC,GAAG,IAAK;IAAE,OAAOA,GAAG,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKX,IAAI;EAAA,CAAC,CAAC;;EAEjG;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEF,oBACEJ,OAAA;IAAAgB,QAAA,eACAhB,OAAA,CAACJ,IAAI;MAACqB,SAAS,EAAC,UAAU;MAAAD,QAAA,gBAExBhB,OAAA,CAACL,aAAa;QAACuB,cAAc,EAAEX,cAAe;QAACY,QAAQ,EAAEf;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAEhEvB,OAAA,CAACH,aAAa;QAAC2B,OAAO,EAAEf;MAAQ;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EAIjCE,OAAO,CAACC,GAAG,CAAC,2BAA2B,GAAEtB,IAAI,CAAC,eAG/CJ,OAAA,CAACF,YAAY;QAACY,KAAK,EAAED;MAAQ;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAiC5B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAApB,EAAA,CApEKF,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAsEd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}