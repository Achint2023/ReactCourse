{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\achisriv\\\\OneDrive - Capgemini\\\\Documents\\\\React Course\\\\InvestApp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport logo from './assets/investment-calculator-logo.png';\nimport DispInvest from './Components/DispInvest';\nimport InvestForm from './Components/InvestForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [results, setResults] = useState(null);\n  // let yearlyData = [];\n\n  const CalculateHandler = data => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    let yearlyData = []; // per-year results\n\n    let currentSavings = data.currS; // feel free to change the shape of this input object!\n    let yearlyContribution = data.yearS; // as mentioned: feel free to change the shape...\n    let expectedReturn = data.expR / 100;\n    let duration = data.dur;\n    let totalI = 0;\n\n    // // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      totalI += yearlyInterest;\n      currentSavings += yearlyInterest + yearlyContribution;\n      const investment = {\n        'year': i + 1,\n        'interest': yearlyInterest,\n        'totalS': currentSavings,\n        'totalI': totalI,\n        'cap': currentSavings + yearlyContribution\n      };\n      yearlyData.push(investment);\n      // setYearlyData((yearlyData) => {return [\n      //   ...yearlyData,\n      //   investment\n\n      // ];\n    }\n    ;\n    setResults(yearlyData);\n    console.log('In App.js', results);\n\n    // do something with yearlyData ...\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Investment Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InvestForm, {\n      formInputs: CalculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this), results != null ? /*#__PURE__*/_jsxDEV(DispInvest, {\n      invest: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 60\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 55\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vhDiCGmoJt2q2wFS9XCIWEhu7yg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","logo","DispInvest","InvestForm","jsxDEV","_jsxDEV","App","_s","results","setResults","CalculateHandler","data","yearlyData","currentSavings","currS","yearlyContribution","yearS","expectedReturn","expR","duration","dur","totalI","i","yearlyInterest","investment","push","console","log","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","formInputs","invest","_c","$RefreshReg$"],"sources":["C:/Users/achisriv/OneDrive - Capgemini/Documents/React Course/InvestApp/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport logo from './assets/investment-calculator-logo.png';\nimport DispInvest from './Components/DispInvest';\nimport InvestForm from './Components/InvestForm';\n\n\nfunction App() {\n const [results , setResults] = useState(null);\n  // let yearlyData = [];\n\n  const CalculateHandler = (data) => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    let yearlyData = []; // per-year results\n      \n\n    let currentSavings = data.currS; // feel free to change the shape of this input object!\n    let yearlyContribution = data.yearS; // as mentioned: feel free to change the shape...\n    let expectedReturn = data.expR / 100; \n    let duration = data.dur;\n\n    let totalI = 0;\n\n   // // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n\n      totalI += yearlyInterest;\n\n      currentSavings += yearlyInterest + yearlyContribution;\n\n      const investment = {'year': i + 1,\n      'interest': yearlyInterest,\n      'totalS' : currentSavings,\n      'totalI' : totalI,\n      'cap': currentSavings + yearlyContribution,};\n\n\n      yearlyData.push(investment);\n      // setYearlyData((yearlyData) => {return [\n      //   ...yearlyData,\n      //   investment\n        \n      // ];\n    };\n\n    setResults(yearlyData);\n\n    console.log('In App.js',results);\n\n    // do something with yearlyData ...\n  };\n\n  return (\n    <div>\n      <header className=\"header\">\n        <img src={logo} alt=\"logo\" />\n        <h1>Investment Calculator</h1>\n      </header>\n\n    <InvestForm formInputs={CalculateHandler}/>\n\n\n\n      {/* Todo: Show below table conditionally (only once result data is available) */}\n      {/* Show fallback text if no data is available */}\n\n{ results != null ? <DispInvest invest={results} /> : <div><h2>No Input</h2></div>}\n\n      \n\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,yCAAyC;AAC1D,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,OAAO,EAAGC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C;;EAEA,MAAMU,gBAAgB,GAAIC,IAAI,IAAK;IACjC;IACA;;IAEA,IAAIC,UAAU,GAAG,EAAE,CAAC,CAAC;;IAGrB,IAAIC,cAAc,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC;IACjC,IAAIC,kBAAkB,GAAGJ,IAAI,CAACK,KAAK,CAAC,CAAC;IACrC,IAAIC,cAAc,GAAGN,IAAI,CAACO,IAAI,GAAG,GAAG;IACpC,IAAIC,QAAQ,GAAGR,IAAI,CAACS,GAAG;IAEvB,IAAIC,MAAM,GAAG,CAAC;;IAEf;IACC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,QAAQ,EAAEG,CAAC,EAAE,EAAE;MACjC,MAAMC,cAAc,GAAGV,cAAc,GAAGI,cAAc;MAEtDI,MAAM,IAAIE,cAAc;MAExBV,cAAc,IAAIU,cAAc,GAAGR,kBAAkB;MAErD,MAAMS,UAAU,GAAG;QAAC,MAAM,EAAEF,CAAC,GAAG,CAAC;QACjC,UAAU,EAAEC,cAAc;QAC1B,QAAQ,EAAGV,cAAc;QACzB,QAAQ,EAAGQ,MAAM;QACjB,KAAK,EAAER,cAAc,GAAGE;MAAmB,CAAC;MAG5CH,UAAU,CAACa,IAAI,CAACD,UAAU,CAAC;MAC3B;MACA;MACA;;MAEA;IACF;IAAC;IAEDf,UAAU,CAACG,UAAU,CAAC;IAEtBc,OAAO,CAACC,GAAG,CAAC,WAAW,EAACnB,OAAO,CAAC;;IAEhC;EACF,CAAC;;EAED,oBACEH,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAQwB,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACxBvB,OAAA;QAAKyB,GAAG,EAAE7B,IAAK;QAAC8B,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7B9B,OAAA;QAAAuB,QAAA,EAAI;MAAqB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eAEX9B,OAAA,CAACF,UAAU;MAACiC,UAAU,EAAE1B;IAAiB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAO7C3B,OAAO,IAAI,IAAI,gBAAGH,OAAA,CAACH,UAAU;MAACmC,MAAM,EAAE7B;IAAQ;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAG9B,OAAA;MAAAuB,QAAA,eAAKvB,OAAA;QAAAuB,QAAA,EAAI;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAKzE,CAAC;AAEV;AAAC5B,EAAA,CArEQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAuEZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}