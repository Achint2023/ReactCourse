{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\achisriv\\\\OneDrive - Capgemini\\\\Documents\\\\React Course\\\\InvestApp\\\\src\\\\App.js\";\nimport logo from './assets/investment-calculator-logo.png';\nimport DispInvest from './Components/DispInvest';\nimport InvestForm from './Components/InvestForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const calculateHandler = data => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    let yearlyData = []; // per-year results\n\n    let currentSavings = data.currS; // feel free to change the shape of this input object!\n    let yearlyContribution = data.yearS; // as mentioned: feel free to change the shape...\n    let expectedReturn = data.expR / 100;\n    let duration = data.dur;\n    let totalI = 0;\n\n    // // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      totalI += yearlyInterest;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        'year': i + 1,\n        'interest': yearlyInterest,\n        'totalS': currentSavings,\n        'totalI': totalI,\n        'cap': currentSavings + yearlyContribution\n      });\n    }\n\n    // do something with yearlyData ...\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Investment Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InvestForm, {\n      formInputs: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DispInvest, {\n      invest: yearlyData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","DispInvest","InvestForm","jsxDEV","_jsxDEV","App","calculateHandler","data","yearlyData","currentSavings","currS","yearlyContribution","yearS","expectedReturn","expR","duration","dur","totalI","i","yearlyInterest","push","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","formInputs","invest","_c","$RefreshReg$"],"sources":["C:/Users/achisriv/OneDrive - Capgemini/Documents/React Course/InvestApp/src/App.js"],"sourcesContent":["import logo from './assets/investment-calculator-logo.png';\nimport DispInvest from './Components/DispInvest';\nimport InvestForm from './Components/InvestForm';\n\n\nfunction App() {\n  const calculateHandler = (data) => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    let yearlyData = []; // per-year results\n\n    let currentSavings = data.currS; // feel free to change the shape of this input object!\n    let yearlyContribution = data.yearS; // as mentioned: feel free to change the shape...\n    let expectedReturn = data.expR / 100; \n    let duration = data.dur;\n\n    let totalI = 0;\n\n   // // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n\n\n\n      const yearlyInterest = currentSavings * expectedReturn;\n\n      totalI += yearlyInterest;\n\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        'year': i + 1,\n        'interest': yearlyInterest,\n        'totalS' : currentSavings,\n        'totalI' : totalI,\n        'cap': currentSavings + yearlyContribution,\n      });\n    }\n\n    // do something with yearlyData ...\n  };\n\n  return (\n    <div>\n      <header className=\"header\">\n        <img src={logo} alt=\"logo\" />\n        <h1>Investment Calculator</h1>\n      </header>\n\n    <InvestForm formInputs={calculateHandler}/>\n\n\n      {/* Todo: Show below table conditionally (only once result data is available) */}\n      {/* Show fallback text if no data is available */}\n\n      <DispInvest invest={yearlyData} />\n\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,yCAAyC;AAC1D,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjD,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,gBAAgB,GAAIC,IAAI,IAAK;IACjC;IACA;;IAEA,IAAIC,UAAU,GAAG,EAAE,CAAC,CAAC;;IAErB,IAAIC,cAAc,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC;IACjC,IAAIC,kBAAkB,GAAGJ,IAAI,CAACK,KAAK,CAAC,CAAC;IACrC,IAAIC,cAAc,GAAGN,IAAI,CAACO,IAAI,GAAG,GAAG;IACpC,IAAIC,QAAQ,GAAGR,IAAI,CAACS,GAAG;IAEvB,IAAIC,MAAM,GAAG,CAAC;;IAEf;IACC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,QAAQ,EAAEG,CAAC,EAAE,EAAE;MAIjC,MAAMC,cAAc,GAAGV,cAAc,GAAGI,cAAc;MAEtDI,MAAM,IAAIE,cAAc;MAExBV,cAAc,IAAIU,cAAc,GAAGR,kBAAkB;MACrDH,UAAU,CAACY,IAAI,CAAC;QACd;QACA,MAAM,EAAEF,CAAC,GAAG,CAAC;QACb,UAAU,EAAEC,cAAc;QAC1B,QAAQ,EAAGV,cAAc;QACzB,QAAQ,EAAGQ,MAAM;QACjB,KAAK,EAAER,cAAc,GAAGE;MAC1B,CAAC,CAAC;IACJ;;IAEA;EACF,CAAC;;EAED,oBACEP,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAQkB,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACxBjB,OAAA;QAAKmB,GAAG,EAAEvB,IAAK;QAACwB,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7BxB,OAAA;QAAAiB,QAAA,EAAI;MAAqB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eAEXxB,OAAA,CAACF,UAAU;MAAC2B,UAAU,EAAEvB;IAAiB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAMzCxB,OAAA,CAACH,UAAU;MAAC6B,MAAM,EAAEtB;IAAW;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAG/B,CAAC;AAEV;AAACG,EAAA,GAvDQ1B,GAAG;AAyDZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}